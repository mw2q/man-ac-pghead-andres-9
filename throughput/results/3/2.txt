BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	s_acctbal,
	s_name,
	n_name,
	p_partkey,
	p_mfgr,
	s_address,
	s_phone,
	s_comment
from
	part,
	supplier,
	partsupp,
	nation,
	region
where
	p_partkey = ps_partkey
	and s_suppkey = ps_suppkey
	and p_size = 32
	and p_type like '%STEEL'
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'EUROPE'
	and ps_supplycost = (
		select
			min(ps_supplycost)
		from
			partsupp,
			supplier,
			nation,
			region
		where
			p_partkey = ps_partkey
			and s_suppkey = ps_suppkey
			and s_nationkey = n_nationkey
			and n_regionkey = r_regionkey
			and r_name = 'EUROPE'
	)
order by
	s_acctbal desc,
	n_name,
	s_name,
	p_partkey
LIMIT 100;
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=801608.55..801608.56 rows=1 width=190) (actual time=11661.948..11661.978 rows=100 loops=1)
   Buffers: shared hit=1528824 read=355795 written=1234
   ->  Sort  (cost=801608.55..801608.56 rows=1 width=190) (actual time=11661.945..11661.964 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         Buffers: shared hit=1528824 read=355795 written=1234
         ->  Merge Join  (cost=381554.45..801608.54 rows=1 width=190) (actual time=9061.388..11655.986 rows=4885 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1808
               Buffers: shared hit=1528816 read=355795 written=1234
               ->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7963 width=30) (actual time=0.021..1236.092 rows=8082 loops=1)
                     Filter: (((p_type)::text ~~ '%STEEL'::text) AND (p_size = 32))
                     Rows Removed by Filter: 1991918
                     Buffers: shared hit=2657 read=44084 written=95
               ->  Sort  (cost=381554.03..385551.87 rows=1599136 width=168) (actual time=9060.984..9460.033 rows=1602380 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 474854kB
                     Buffers: shared hit=1363310 read=306116 written=1118
                     ->  Nested Loop  (cost=2.00..216772.17 rows=1599136 width=168) (actual time=0.094..6567.289 rows=1602640 loops=1)
                           Buffers: shared hit=1363310 read=306116 written=1118
                           ->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.056..109.780 rows=20033 loops=1)
                                 Join Filter: (nation.n_regionkey = region.r_regionkey)
                                 Rows Removed by Join Filter: 79967
                                 Buffers: shared hit=2181
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.010 rows=1 loops=1)
                                       Filter: (r_name = 'EUROPE'::bpchar)
                                       Rows Removed by Filter: 4
                                       Buffers: shared hit=1
                                 ->  Hash Join  (cost=1.56..4555.56 rows=100000 width=168) (actual time=0.041..93.735 rows=100000 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       Buffers: shared hit=2180
                                       ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=142) (actual time=0.007..36.366 rows=100000 loops=1)
                                             Buffers: shared hit=2179
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.019..0.019 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             Buffers: shared hit=1
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.006 rows=25 loops=1)
                                                   Buffers: shared hit=1
                           ->  Index Scan using partsupp_ps_suppkey_idx on partsupp  (cost=0.43..9.75 rows=80 width=12) (actual time=0.017..0.301 rows=80 loops=20033)
                                 Index Cond: (ps_suppkey = supplier.s_suppkey)
                                 Buffers: shared hit=1361129 read=306116 written=1118
               SubPlan 1
                 ->  Aggregate  (cost=48.83..48.84 rows=1 width=4) (actual time=0.061..0.061 rows=1 loops=6693)
                       Buffers: shared hit=162849 read=5595 written=21
                       ->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.039..0.059 rows=2 loops=6693)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             Buffers: shared hit=162849 read=5595 written=21
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=6693)
                                   Filter: (r_name = 'EUROPE'::bpchar)
                                   Rows Removed by Filter: 4
                                   Buffers: shared hit=6693
                             ->  Nested Loop  (cost=0.86..47.71 rows=4 width=8) (actual time=0.026..0.055 rows=4 loops=6693)
                                   Buffers: shared hit=156156 read=5595 written=21
                                   ->  Nested Loop  (cost=0.72..47.04 rows=4 width=8) (actual time=0.024..0.046 rows=4 loops=6693)
                                         Buffers: shared hit=102612 read=5595 written=21
                                         ->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.43..13.75 rows=4 width=8) (actual time=0.016..0.018 rows=4 loops=6693)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                               Buffers: shared hit=22142 read=5595 written=21
                                         ->  Index Scan using pk_supplier on supplier supplier_1  (cost=0.29..8.31 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=26772)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                               Buffers: shared hit=80470
                                   ->  Index Scan using pk_nation on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=26772)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                         Buffers: shared hit=53544
 Planning time: 5.739 ms
 Execution time: 11701.044 ms
(68 rows)

COMMIT;
COMMIT
